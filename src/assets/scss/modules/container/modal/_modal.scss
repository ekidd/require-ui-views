/** --------------------------------------------------------------------
 * MODAL VIEW OBJECT
 *
 * SCSS Dependencies:
 *    - Opacity vendor mixin /src/assets/scss/helpers/_vendor.scss
 *    - Transition vendor mixin /src/assets/scss/helpers/_vendor.scss
 *    - isVisuallyHidden mixin /src/assets/scss/helpers/_mixins.scss
 *
 * The following CSS is a starting point. This modal is largely un-styled
 * and will require additional styling to fit your project needs.
 * Update the variables and class names below to fit your project
------------------------------------------------------------------------ */
$modal-TRANSITION: 0.4s ease opacity;
$sneezeguard-ZINDEX: 900;
$modal-ZINDEX: 1000;

/* ---------------------------------------------------------------------
 MODAL UTILITIES

 When the modal is active, hide overflow on the HTML element to avoid
 double scrollbars in the browser window.

 The .hasModal state class is added via ModalView.js on the <html> tag
------------------------------------------------------------------------ */
.hasModal {
    overflow: hidden;
}

/* ---------------------------------------------------------------------
 SNEEZEGUARD

 Set to display: none by default as it provides no benefit to assistive
 devices. The sneezeguard acts as a visual barries between the site
 content and the modal content. It also acts as a "click blocker" as
 click events may not pass through to other elements on the page

 The .isActive class is added via ModalView.js
------------------------------------------------------------------------ */
.sneezeguard {
    // set your sneezeguard positioning here
    display: none;
    background-color: #000000; // lte IE8 fallback, update as needed
    background-color: rgba(0, 0, 0, 0.3); // Update as needed
    z-index: $sneezeguard-ZINDEX;
    @include opacity(0);
    @include transition($modal-TRANSITION);
}

.sneezeguard.isActive {
    display: block;
    @include opacity(1);
}

/* ---------------------------------------------------------------------
 MODAL

 The modal object. Add your default styles as necessary to the `.modal`
 and `.modal-wrapper` selectors. These styles will be applied both when
 JavaScript is enabled and enabled. Add any additional stylistic
 overrides to the `.js .modal` selector.

 The .isActive class is added via ModalView.js
 The .isBeingMeasured class is added via ModalView.js
------------------------------------------------------------------------ */
.modal {
    // Default styles
}

.js .modal {
    // set your modal positioning and overflow handling here
    z-index: $modal-ZINDEX;
    @include opacity(0);
    @include transition($modal-TRANSITION);
}

.modal.isActive {
    @include opacity(1);
}

.modal-wrapper {
    // Default styles, update as needed
    // If the modal content does not set an implicit width, set one here
    background: #ffffff;
}

.js .modal-wrapper {
    // set your modal content positioning here
    margin: 0 auto;
}

.modal-wrapper.isBeingMeasured {
    display: block;
    position: absolute;
    top: 0;
    left: -9000px;
}

// If JavaScript is not enabled, hide the modal close button
.no-js .modal-wrapper-content-close {
    display: none;
}